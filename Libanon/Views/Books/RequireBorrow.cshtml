@model Libanon.Models.Book

@{
    ViewBag.Title = "RequireBorrow";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    Libanon.Models.BorrowerTemp Borrower = ViewData["Borrower"] as BorrowerTemp;
}

<h2>RequireBorrow</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Book</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.BookId)

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CurrentISBN.ISBNCode, "ISBN", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CurrentISBN.ISBNCode, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            @Html.ValidationMessageFor(model => model.CurrentISBNId, "", new { @class = "text-danger" })
        </div>
    </div>

    <h4>Owner</h4>
    <hr />
    <div class="form-group">
        @Html.LabelFor(model => model.CurrentOwner.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CurrentOwner.Name, new { htmlAttributes = new { @class = "form-control", @readonly = true } })

        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.CurrentOwner.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CurrentOwner.Phone, new { htmlAttributes = new { @class = "form-control", @readonly = true } })

        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.CurrentOwner.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CurrentOwner.Email, new { htmlAttributes = new { @class = "form-control", @readonly = true } })

        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.CurrentOwner.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CurrentOwner.Address, new { htmlAttributes = new { @class = "form-control", @readonly = true } })

        </div>
    </div>


    <h4>Borrower</h4>
    <hr />
    <div class="form-group">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", @readonly = true } })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(u => Borrower.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(u => Borrower.Name, new { htmlAttributes = new { @class = "form-control", } })

        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(u => Borrower.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(u => Borrower.Phone, new { htmlAttributes = new { @class = "form-control", } })

        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(u => Borrower.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(u => Borrower.Email, new { htmlAttributes = new { @class = "form-control", } })

        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(u => Borrower.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(u => Borrower.Address, new { htmlAttributes = new { @class = "form-control", } })

        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
